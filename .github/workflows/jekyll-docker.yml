name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # 当推送到主分支时触发

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      # Setup Docker with insecure registry
      - name: Setup Docker for insecure registry
        run: |
          echo "{ \"insecure-registries\": [\"47.107.108.89:5000\"] }" | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker

      # Build the client Docker image
      - name: Build client Docker image
        working-directory: ./client
        run: |
          docker build -t client:latest .

      # Build the server Docker image
      - name: Build server Docker image
        working-directory: ./server
        run: |
          docker build -t node-server:latest .

      # Tag client image with Harbor repository tag
      - name: Tag client Docker image
        run: |
          docker tag client:latest 47.107.108.89:5000/blog_project/client:latest

      # Tag server image with Harbor repository tag
      - name: Tag server Docker image
        run: |
          docker tag node-server:latest 47.107.108.89:5000/blog_project/node-server:latest

      # Test List Docker images
      - name: List Docker images
        run: docker images
      
      # Push client Docker image to Harbor
      - name: Push client Docker image to Harbor
        run: |
          docker login -u ${{ secrets.HARBOR_USERNAME }} -p ${{ secrets.HARBOR_PASSWORD }} 47.107.108.89:5000/
          docker push 47.107.108.89:5000/blog_project/client:latest
      
      # Push server Docker image to Harbor
      - name: Push server Docker image to Harbor
        run: |
          docker login -u ${{ secrets.HARBOR_USERNAME }} -p ${{ secrets.HARBOR_PASSWORD }} 47.107.108.89:5000/
          docker push 47.107.108.89:5000/blog_project/node-server:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: SSH into server and deploy Docker containers
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private-key.pem
          chmod 600 private-key.pem
          # 跳过主机密钥验证
          mkdir -p ~/.ssh
          ssh-keyscan -H 47.107.108.89 >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          # 使用私钥连接到服务器
          ssh -i private-key.pem username@47.107.108.89 << EOF
          cd /app/docker/blog/
          docker-compose pull  # 拉取最新的镜像
          docker-compose up -d  # 重启容器
          EOF
